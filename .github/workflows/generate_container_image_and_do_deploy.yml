name: Create Docker Image on Docker Hub and do Deploy on AWS ECS

on:
  release:
    types:
      - created

env:
  IMAGE_REPOSITORY: fiapsoat2grupo13
  IMAGE_NAME: purchase-service
  DEFAULT_TAG: latest

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Download Jar File
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'tags/${{ github.ref_name }}'
          file: 'purchase-service.jar'

      - name: Download Dockerfile
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'tags/${{ github.ref_name }}'
          file: 'Dockerfile'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }},${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: ECS Deployment
        run: |
          aws ecs update-service --cluster ${{ vars.ECS_CLUSTER }} --service ${{ vars.ECS_SERVICE }}  --force-new-deployment --region ${{ vars.AWS_REGION }}